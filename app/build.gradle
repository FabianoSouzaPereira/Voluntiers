plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin' version '2.7.5'
    id 'com.google.gms.google-services' version '4.3.15'
}

// Carregando as propriedades do arquivo keystore.properties
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def firebasePropertiesFile = rootProject.file("firebase.properties")
def firebaseProperties = new Properties()
firebaseProperties.load(new FileInputStream(firebasePropertiesFile))
def idClientWeb = firebaseProperties['IDClientWeb']
def secretKeyWeb = firebaseProperties['SecretKeyWeb']
def apiWEB = firebaseProperties['ApiWEB']
def idAPP = firebaseProperties['IDAPP']


android {
    namespace 'com.fabianodev.voluntiers'
    compileSdk 34

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    defaultConfig {
        applicationId "com.fabianodev.voluntiers"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {
    def lifecycle_version = '2.7.0-rc01'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    implementation "androidx.core:core-ktx:${rootProject.ext.corektxVersion}"
    implementation "androidx.appcompat:appcompat:${rootProject.ext.appcompatVersion}"
    implementation "com.google.android.material:material:${rootProject.ext.materialVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.ext.constraintlayoutVersion}"
    implementation "androidx.navigation:navigation-fragment-ktx:${rootProject.ext.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${rootProject.ext.navigation}"
    implementation 'androidx.preference:preference-ktx:1.2.1'

    /******** LifeCycle ********/
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${rootProject.ext.livedataktxVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.ext.viewmodelktxVersion}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${rootProject.ext.runtimektxVersion}"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    /******** DAGGER ********/
    implementation 'com.google.dagger:dagger:2.49'
    kapt 'com.google.dagger:dagger-compiler:2.49'

    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    /** Retrofit  **/
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    /* Dependency for the Firebase */
    implementation "com.google.firebase:firebase-analytics-ktx:21.5.0"
    implementation "com.google.firebase:firebase-auth-ktx:22.3.0"
    implementation "com.google.firebase:firebase-firestore-ktx:24.10.0"
    /* Messages in app */
    implementation "com.google.firebase:firebase-inappmessaging-ktx:20.4.0"
    /* Show in app */
    implementation "com.google.firebase:firebase-inappmessaging-display-ktx:20.4.0"

    /******** Tests ********/
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.1"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.7.2"
    androidTestImplementation "de.mannodermaus.junit5:android-test-runner:1.7.2"
    androidTestImplementation "de.mannodermaus.junit5:android-test-foundation:1.7.2"
    testImplementation "org.robolectric:robolectric:4.11.1"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.1"
    testImplementation "io.mockk:mockk:1.12.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2"
    /* Depended od android component */
    testImplementation "androidx.arch.core:core-testing:2.2.0"


}